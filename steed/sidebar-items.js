initSidebarItems({"macro":[["print",""],["println",""],["vec","Creates a `Vec` containing the arguments."]],"mod":[["any","This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."],["borrow","A module for working with borrowed data."],["boxed","A pointer type for heap allocation."],["cell","Shareable mutable containers."],["char","A character type."],["clone","The `Clone` trait for types that cannot be 'implicitly copied'."],["cmp","Functionality for ordering and comparison."],["collections","Collection types."],["convert","Traits for conversions between types."],["default","The `Default` trait for types which may have meaningful default values."],["error","Traits for working with Errors."],["fmt","Utilities for formatting and printing `String`s"],["fs",""],["hash","Generic hashing support."],["i16","The 16-bit signed integer type."],["i32","The 32-bit signed integer type."],["i64","The 64-bit signed integer type."],["i8","The 8-bit signed integer type."],["intrinsics","rustc compiler intrinsics."],["io",""],["isize","The pointer-sized signed integer type."],["iter","Composable external iteration."],["marker","Primitive traits and types representing basic properties of types."],["mem","Basic functions for dealing with memory."],["num","Additional functionality for numerics."],["ops","Overloadable operators."],["option","Optional values."],["prelude","The Rust Prelude."],["process",""],["ptr","Raw, unsafe pointers, `*const T`, and `*mut T`."],["raw","Contains struct definitions for the layout of compiler built-in types."],["rc","Single-threaded reference-counting pointers."],["result","Error handling with the `Result` type."],["slice","A dynamically-sized view into a contiguous sequence, `[T]`."],["str","Unicode string slices."],["string","A UTF-8 encoded, growable string."],["time","Temporal quantification."],["u16","The 16-bit unsigned integer type."],["u32","The 32-bit unsigned integer type."],["u64","The 64-bit unsigned integer type."],["u8","The 8-bit unsigned integer type."],["usize","The pointer-sized unsigned integer type."],["vec","A contiguous growable array type with heap-allocated contents, written `Vec<T>` but pronounced 'vector.'"]]});